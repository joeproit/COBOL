IDENTIFICATION DIVISION.
PROGRAM-ID. PrintStatement.

ENVIRONMENT DIVISION.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  WS-ACCOUNT-HOLDER-INFO         PIC X(100).
01  WS-ACCOUNT-NUMBER              PIC 9(10).
01  WS-STATEMENT-PERIOD            PIC X(20).
01  WS-BEGINNING-BALANCE           PIC S9(10)V99.
01  WS-TRANSACTION-INFO            PIC X(100).
01  WS-ENDING-BALANCE              PIC S9(10)V99.

EXEC SQL INCLUDE SQLCA END-EXEC.    * Include SQL Communications Area  

PROCEDURE DIVISION.
MAIN-PARAGRAPH.
    EXEC SQL
        CONNECT TO MYDB
    END-EXEC

    IF SQLCODE NOT EQUAL 0
        DISPLAY "Failed to connect to the database"
        STOP RUN
    END-IF

    EXEC SQL
        DECLARE C1 CURSOR FOR
        SELECT * FROM ACCOUNTS WHERE ACCOUNT_NUMBER = :WS-ACCOUNT-NUMBER
    END-EXEC

    EXEC SQL
        OPEN C1
    END-EXEC

    EXEC SQL
        FETCH NEXT FROM C1 INTO :WS-ACCOUNT-HOLDER-INFO, :WS-BEGINNING-BALANCE, :WS-ENDING-BALANCE
    END-EXEC

    IF SQLCODE NOT EQUAL 0
        DISPLAY "Failed to retrieve account info"
        STOP RUN
    END-IF

    EXEC SQL
        DECLARE C2 CURSOR FOR
        SELECT * FROM TRANSACTIONS WHERE ACCOUNT_NUMBER = :WS-ACCOUNT-NUMBER
    END-EXEC

    EXEC SQL
        OPEN C2
    END-EXEC

    DISPLAY "Account Holder: " WS-ACCOUNT-HOLDER-INFO
    DISPLAY "Account Number: " WS-ACCOUNT-NUMBER
    DISPLAY "Statement Period: " WS-STATEMENT-PERIOD
    DISPLAY "Beginning Balance: " WS-BEGINNING-BALANCE

    DISPLAY "Transactions:"

    PERFORM UNTIL SQLCODE NOT EQUAL 0
        EXEC SQL
            FETCH NEXT FROM C2 INTO :WS-TRANSACTION-INFO
        END-EXEC

        IF SQLCODE EQUAL 0
            DISPLAY WS-TRANSACTION-INFO
        END-IF
    END-PERFORM

    DISPLAY "Ending Balance: " WS-ENDING-BALANCE

    EXEC SQL
        CLOSE C1
    END-EXEC

    EXEC SQL
        CLOSE C2
    END-EXEC

    EXEC SQL
        DISCONNECT MYDB
    END-EXEC.

    STOP RUN.
END PROGRAM PrintStatement.
